{"ast":null,"code":"/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n  eventsEngine = require(\"../../events/core/events_engine\"),\n  noop = require(\"../../core/utils/common\").noop,\n  Class = require(\"../../core/class\"),\n  swipeEvents = require(\"../../events/swipe\"),\n  eventUtils = require(\"../../events/utils\");\nvar LIST_EDIT_DECORATOR = \"dxListEditDecorator\",\n  SWIPE_START_EVENT_NAME = eventUtils.addNamespace(swipeEvents.start, LIST_EDIT_DECORATOR),\n  SWIPE_UPDATE_EVENT_NAME = eventUtils.addNamespace(swipeEvents.swipe, LIST_EDIT_DECORATOR),\n  SWIPE_END_EVENT_NAME = eventUtils.addNamespace(swipeEvents.end, LIST_EDIT_DECORATOR);\nvar EditDecorator = Class.inherit({\n  ctor: function ctor(list) {\n    this._list = list;\n    this._init();\n  },\n  _init: noop,\n  _shouldHandleSwipe: false,\n  _attachSwipeEvent: function _attachSwipeEvent(config) {\n    var swipeConfig = {\n      itemSizeFunc: function () {\n        if (this._clearSwipeCache) {\n          this._itemWidthCache = this._list.$element().width();\n          this._clearSwipeCache = false;\n        }\n        return this._itemWidthCache;\n      }.bind(this)\n    };\n    eventsEngine.on(config.$itemElement, SWIPE_START_EVENT_NAME, swipeConfig, this._itemSwipeStartHandler.bind(this));\n    eventsEngine.on(config.$itemElement, SWIPE_UPDATE_EVENT_NAME, this._itemSwipeUpdateHandler.bind(this));\n    eventsEngine.on(config.$itemElement, SWIPE_END_EVENT_NAME, this._itemSwipeEndHandler.bind(this));\n  },\n  _itemSwipeStartHandler: function _itemSwipeStartHandler(e) {\n    var $itemElement = $(e.currentTarget);\n    if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      e.cancel = true;\n      return;\n    }\n    clearTimeout(this._list._inkRippleTimer);\n    this._swipeStartHandler($itemElement, e);\n  },\n  _itemSwipeUpdateHandler: function _itemSwipeUpdateHandler(e) {\n    var $itemElement = $(e.currentTarget);\n    this._swipeUpdateHandler($itemElement, e);\n  },\n  _itemSwipeEndHandler: function _itemSwipeEndHandler(e) {\n    var $itemElement = $(e.currentTarget);\n    this._swipeEndHandler($itemElement, e);\n    this._clearSwipeCache = true;\n  },\n  beforeBag: noop,\n  afterBag: noop,\n  _commonOptions: function _commonOptions() {\n    return {\n      activeStateEnabled: this._list.option(\"activeStateEnabled\"),\n      hoverStateEnabled: this._list.option(\"hoverStateEnabled\"),\n      focusStateEnabled: this._list.option(\"focusStateEnabled\")\n    };\n  },\n  modifyElement: function modifyElement(config) {\n    if (this._shouldHandleSwipe) {\n      this._attachSwipeEvent(config);\n      this._clearSwipeCache = true;\n    }\n  },\n  afterRender: noop,\n  handleClick: noop,\n  handleKeyboardEvents: noop,\n  handleEnterPressing: noop,\n  handleContextMenu: noop,\n  _swipeStartHandler: noop,\n  _swipeUpdateHandler: noop,\n  _swipeEndHandler: noop,\n  visibilityChange: noop,\n  getExcludedSelectors: noop,\n  dispose: noop\n});\nmodule.exports = EditDecorator;","map":null,"metadata":{},"sourceType":"script"}