{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel/excel.cell_format_helper.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _type = require(\"../../core/utils/type\");\nvar _excel = require(\"./excel.tag_helper\");\nvar _excel2 = _interopRequireDefault(_excel);\nvar _excel3 = require(\"./excel.cell_alignment_helper\");\nvar _excel4 = _interopRequireDefault(_excel3);\nvar _excel5 = require(\"./excel.fill_helper\");\nvar _excel6 = _interopRequireDefault(_excel5);\nvar _excel7 = require(\"./excel.font_helper\");\nvar _excel8 = _interopRequireDefault(_excel7);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar cellFormatHelper = {\n  tryCreateTag: function tryCreateTag(sourceObj, sharedItemsContainer) {\n    var result = null;\n    if ((0, _type.isDefined)(sourceObj)) {\n      var numberFormatId = void 0;\n      if (\"number\" === typeof sourceObj.numberFormat) {\n        numberFormatId = sourceObj.numberFormat;\n      } else {\n        numberFormatId = sharedItemsContainer.registerNumberFormat(sourceObj.numberFormat);\n      }\n      var fill = sourceObj.fill;\n      if (!(0, _type.isDefined)(fill)) {\n        fill = _excel6.default.tryCreateFillFromSimpleFormat(sourceObj);\n      }\n      result = {\n        numberFormatId: numberFormatId,\n        alignment: _excel4.default.tryCreateTag(sourceObj.alignment),\n        fontId: sharedItemsContainer.registerFont(sourceObj.font),\n        fillId: sharedItemsContainer.registerFill(fill)\n      };\n      if (cellFormatHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n    return result;\n  },\n  copy: function copy(source) {\n    var result = void 0;\n    if (null === source) {\n      result = null;\n    } else {\n      if ((0, _type.isDefined)(source)) {\n        result = {};\n        if (void 0 !== source.numberFormat) {\n          result.numberFormat = source.numberFormat;\n        }\n        if (void 0 !== source.fill) {\n          result.fill = _excel6.default.copy(source.fill);\n        } else {\n          _excel6.default.copySimpleFormat(source, result);\n        }\n        if (void 0 !== source.alignment) {\n          result.alignment = _excel4.default.copy(source.alignment);\n        }\n        if (void 0 !== source.font) {\n          result.font = _excel8.default.copy(source.font);\n        }\n      }\n    }\n    return result;\n  },\n  areEqual: function areEqual(leftTag, rightTag) {\n    return cellFormatHelper.isEmpty(leftTag) && cellFormatHelper.isEmpty(rightTag) || (0, _type.isDefined)(leftTag) && (0, _type.isDefined)(rightTag) && leftTag.fontId === rightTag.fontId && leftTag.numberFormatId === rightTag.numberFormatId && leftTag.fillId === rightTag.fillId && _excel4.default.areEqual(leftTag.alignment, rightTag.alignment);\n  },\n  isEmpty: function isEmpty(tag) {\n    return !(0, _type.isDefined)(tag) || !(0, _type.isDefined)(tag.fontId) && !(0, _type.isDefined)(tag.numberFormatId) && !(0, _type.isDefined)(tag.fillId) && _excel4.default.isEmpty(tag.alignment);\n  },\n  toXml: function toXml(tag) {\n    var isAlignmentEmpty = _excel4.default.isEmpty(tag.alignment);\n    var applyNumberFormat = void 0;\n    if ((0, _type.isDefined)(tag.numberFormatId)) {\n      applyNumberFormat = tag.numberFormatId > 0 ? 1 : 0;\n    }\n    return _excel2.default.toXml(\"xf\", {\n      xfId: 0,\n      applyAlignment: isAlignmentEmpty ? null : 1,\n      fontId: tag.fontId,\n      applyNumberFormat: applyNumberFormat,\n      fillId: tag.fillId,\n      numFmtId: tag.numberFormatId\n    }, isAlignmentEmpty ? null : _excel4.default.toXml(tag.alignment));\n  }\n};\nexports.default = cellFormatHelper;","map":null,"metadata":{},"sourceType":"script"}