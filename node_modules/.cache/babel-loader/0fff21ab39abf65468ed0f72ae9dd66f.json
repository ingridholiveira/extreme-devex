{"ast":null,"code":"/**\r\n * DevExtreme (events/hold.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar eventUtils = require(\"./utils\"),\n  Emitter = require(\"./core/emitter\"),\n  registerEmitter = require(\"./core/emitter_registrator\"),\n  abs = Math.abs;\nvar HOLD_EVENT_NAME = \"dxhold\",\n  HOLD_TIMEOUT = 750,\n  TOUCH_BOUNDARY = 5;\nvar HoldEmitter = Emitter.inherit({\n  start: function start(e) {\n    this._startEventData = eventUtils.eventData(e);\n    this._startTimer(e);\n  },\n  _startTimer: function _startTimer(e) {\n    var holdTimeout = \"timeout\" in this ? this.timeout : HOLD_TIMEOUT;\n    this._holdTimer = setTimeout(function () {\n      this._requestAccept(e);\n      this._fireEvent(HOLD_EVENT_NAME, e, {\n        target: e.target\n      });\n      this._forgetAccept();\n    }.bind(this), holdTimeout);\n  },\n  move: function move(e) {\n    if (this._touchWasMoved(e)) {\n      this._cancel(e);\n    }\n  },\n  _touchWasMoved: function _touchWasMoved(e) {\n    var delta = eventUtils.eventDelta(this._startEventData, eventUtils.eventData(e));\n    return abs(delta.x) > TOUCH_BOUNDARY || abs(delta.y) > TOUCH_BOUNDARY;\n  },\n  end: function end() {\n    this._stopTimer();\n  },\n  _stopTimer: function _stopTimer() {\n    clearTimeout(this._holdTimer);\n  },\n  cancel: function cancel() {\n    this._stopTimer();\n  },\n  dispose: function dispose() {\n    this._stopTimer();\n  }\n});\nregisterEmitter({\n  emitter: HoldEmitter,\n  bubble: true,\n  events: [HOLD_EVENT_NAME]\n});\nmodule.exports = {\n  name: HOLD_EVENT_NAME\n};","map":null,"metadata":{},"sourceType":"script"}