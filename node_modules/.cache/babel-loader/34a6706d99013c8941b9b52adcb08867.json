{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 19.2.2-beta\n * Build date: Tue Oct 01 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar popup_1 = require(\"devextreme/ui/popup\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Popup = /** @class */function (_super) {\n  __extends(Popup, _super);\n  function Popup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = popup_1.default;\n    _this._defaults = {\n      defaultHeight: \"height\",\n      defaultPosition: \"position\",\n      defaultVisible: \"visible\",\n      defaultWidth: \"width\"\n    };\n    _this._expectedChildren = {\n      animation: {\n        optionName: \"animation\",\n        isCollectionItem: false\n      },\n      position: {\n        optionName: \"position\",\n        isCollectionItem: false\n      },\n      toolbarItem: {\n        optionName: \"toolbarItems\",\n        isCollectionItem: true\n      }\n    };\n    _this._templateProps = [{\n      tmplOption: \"contentTemplate\",\n      render: \"contentRender\",\n      component: \"contentComponent\",\n      keyFn: \"contentKeyFn\"\n    }, {\n      tmplOption: \"titleTemplate\",\n      render: \"titleRender\",\n      component: \"titleComponent\",\n      keyFn: \"titleKeyFn\"\n    }];\n    return _this;\n  }\n  Object.defineProperty(Popup.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Popup;\n}(component_1.Component);\nexports.Popup = Popup;\nPopup.propTypes = {\n  accessKey: PropTypes.string,\n  animation: PropTypes.object,\n  closeOnOutsideClick: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  deferRendering: PropTypes.bool,\n  disabled: PropTypes.bool,\n  dragEnabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  focusStateEnabled: PropTypes.bool,\n  fullScreen: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  hint: PropTypes.string,\n  hoverStateEnabled: PropTypes.bool,\n  maxHeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  maxWidth: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  minHeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  minWidth: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  onContentReady: PropTypes.func,\n  onDisposing: PropTypes.func,\n  onHidden: PropTypes.func,\n  onHiding: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeEnd: PropTypes.func,\n  onResizeStart: PropTypes.func,\n  onShowing: PropTypes.func,\n  onShown: PropTypes.func,\n  onTitleRendered: PropTypes.func,\n  position: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.oneOf([\"bottom\", \"center\", \"left\", \"left bottom\", \"left top\", \"right\", \"right bottom\", \"right top\", \"top\"])]),\n  resizeEnabled: PropTypes.bool,\n  rtlEnabled: PropTypes.bool,\n  shading: PropTypes.bool,\n  shadingColor: PropTypes.string,\n  showCloseButton: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  tabIndex: PropTypes.number,\n  title: PropTypes.string,\n  toolbarItems: PropTypes.array,\n  visible: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Popup\nvar Animation = /** @class */function (_super) {\n  __extends(Animation, _super);\n  function Animation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Animation.OptionName = \"animation\";\n  Animation.ExpectedChildren = {\n    hide: {\n      optionName: \"hide\",\n      isCollectionItem: false\n    },\n    show: {\n      optionName: \"show\",\n      isCollectionItem: false\n    }\n  };\n  return Animation;\n}(nested_option_1.default);\nexports.Animation = Animation;\n// owners:\n// Position\nvar At = /** @class */function (_super) {\n  __extends(At, _super);\n  function At() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  At.OptionName = \"at\";\n  return At;\n}(nested_option_1.default);\nexports.At = At;\n// owners:\n// Position\nvar BoundaryOffset = /** @class */function (_super) {\n  __extends(BoundaryOffset, _super);\n  function BoundaryOffset() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  BoundaryOffset.OptionName = \"boundaryOffset\";\n  return BoundaryOffset;\n}(nested_option_1.default);\nexports.BoundaryOffset = BoundaryOffset;\n// owners:\n// Position\nvar Collision = /** @class */function (_super) {\n  __extends(Collision, _super);\n  function Collision() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Collision.OptionName = \"collision\";\n  return Collision;\n}(nested_option_1.default);\nexports.Collision = Collision;\n// owners:\n// Animation\nvar Hide = /** @class */function (_super) {\n  __extends(Hide, _super);\n  function Hide() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Hide.OptionName = \"hide\";\n  return Hide;\n}(nested_option_1.default);\nexports.Hide = Hide;\n// owners:\n// Position\nvar My = /** @class */function (_super) {\n  __extends(My, _super);\n  function My() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  My.OptionName = \"my\";\n  return My;\n}(nested_option_1.default);\nexports.My = My;\n// owners:\n// Position\nvar Offset = /** @class */function (_super) {\n  __extends(Offset, _super);\n  function Offset() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Offset.OptionName = \"offset\";\n  return Offset;\n}(nested_option_1.default);\nexports.Offset = Offset;\n// owners:\n// Popup\nvar Position = /** @class */function (_super) {\n  __extends(Position, _super);\n  function Position() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Position.OptionName = \"position\";\n  Position.ExpectedChildren = {\n    at: {\n      optionName: \"at\",\n      isCollectionItem: false\n    },\n    boundaryOffset: {\n      optionName: \"boundaryOffset\",\n      isCollectionItem: false\n    },\n    collision: {\n      optionName: \"collision\",\n      isCollectionItem: false\n    },\n    my: {\n      optionName: \"my\",\n      isCollectionItem: false\n    },\n    offset: {\n      optionName: \"offset\",\n      isCollectionItem: false\n    }\n  };\n  return Position;\n}(nested_option_1.default);\nexports.Position = Position;\n// owners:\n// Animation\nvar Show = /** @class */function (_super) {\n  __extends(Show, _super);\n  function Show() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Show.OptionName = \"show\";\n  return Show;\n}(nested_option_1.default);\nexports.Show = Show;\n// owners:\n// Popup\nvar ToolbarItem = /** @class */function (_super) {\n  __extends(ToolbarItem, _super);\n  function ToolbarItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ToolbarItem.OptionName = \"toolbarItems\";\n  ToolbarItem.IsCollectionItem = true;\n  ToolbarItem.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }];\n  return ToolbarItem;\n}(nested_option_1.default);\nexports.ToolbarItem = ToolbarItem;\nexports.default = Popup;","map":null,"metadata":{},"sourceType":"script"}