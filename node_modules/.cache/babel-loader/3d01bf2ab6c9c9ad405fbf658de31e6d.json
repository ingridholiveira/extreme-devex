{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/support.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _array = require(\"./array\");\nvar _dom_adapter = require(\"../dom_adapter\");\nvar _common = require(\"./common\");\nvar _call_once = require(\"./call_once\");\nvar _call_once2 = _interopRequireDefault(_call_once);\nvar _window = require(\"./window\");\nvar _window2 = _interopRequireDefault(_window);\nvar _devices = require(\"../devices\");\nvar _devices2 = _interopRequireDefault(_devices);\nvar _style = require(\"./style\");\nvar _style2 = _interopRequireDefault(_style);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar _windowUtils$getNavig = _window2.default.getNavigator(),\n  maxTouchPoints = _windowUtils$getNavig.maxTouchPoints,\n  msMaxTouchPoints = _windowUtils$getNavig.msMaxTouchPoints,\n  pointerEnabled = _windowUtils$getNavig.pointerEnabled;\nvar hasProperty = _window2.default.hasProperty.bind(_window2.default);\nvar transitionEndEventNames = {\n  webkitTransition: \"webkitTransitionEnd\",\n  MozTransition: \"transitionend\",\n  OTransition: \"oTransitionEnd\",\n  msTransition: \"MsTransitionEnd\",\n  transition: \"transitionend\"\n};\nvar supportProp = function supportProp(prop) {\n  return !!_style2.default.styleProp(prop);\n};\nvar isNativeScrollingSupported = function isNativeScrollingSupported() {\n  var _devices$real = _devices2.default.real(),\n    platform = _devices$real.platform,\n    version = _devices$real.version,\n    isMac = _devices$real.mac;\n  var isObsoleteAndroid = version && version[0] < 4 && \"android\" === platform;\n  var isNativeScrollDevice = !isObsoleteAndroid && (0, _array.inArray)(platform, [\"ios\", \"android\"]) > -1 || isMac;\n  return isNativeScrollDevice;\n};\nvar inputType = function inputType(type) {\n  if (\"text\" === type) {\n    return true;\n  }\n  var input = (0, _dom_adapter.createElement)(\"input\");\n  try {\n    input.setAttribute(\"type\", type);\n    input.value = \"wrongValue\";\n    return !input.value;\n  } catch (e) {\n    return false;\n  }\n};\nvar detectTouchEvents = function detectTouchEvents(hasWindowProperty, maxTouchPoints) {\n  return (hasWindowProperty(\"ontouchstart\") || !!maxTouchPoints) && !hasWindowProperty(\"callPhantom\");\n};\nvar detectPointerEvent = function detectPointerEvent(hasWindowProperty, pointerEnabled) {\n  var isPointerEnabled = (0, _common.ensureDefined)(pointerEnabled, true);\n  var canUsePointerEvent = (0, _common.ensureDefined)(pointerEnabled, false);\n  return hasWindowProperty(\"PointerEvent\") && isPointerEnabled || canUsePointerEvent;\n};\nvar touchEvents = detectTouchEvents(hasProperty, maxTouchPoints);\nvar pointerEvents = detectPointerEvent(hasProperty, pointerEnabled);\nvar touchPointersPresent = !!maxTouchPoints || !!msMaxTouchPoints;\nexports.touchEvents = touchEvents;\nexports.pointerEvents = pointerEvents;\nexports.touch = touchEvents || pointerEvents && touchPointersPresent;\nexports.transition = (0, _call_once2.default)(function () {\n  return supportProp(\"transition\");\n});\nexports.transitionEndEventName = (0, _call_once2.default)(function () {\n  return transitionEndEventNames[_style2.default.styleProp(\"transition\")];\n});\nexports.animation = (0, _call_once2.default)(function () {\n  return supportProp(\"animation\");\n});\nexports.nativeScrolling = isNativeScrollingSupported();\nexports.styleProp = _style2.default.styleProp;\nexports.stylePropPrefix = _style2.default.stylePropPrefix;\nexports.supportProp = supportProp;\nexports.inputType = inputType;","map":null,"metadata":{},"sourceType":"script"}