{"ast":null,"code":"/**\r\n * DevExtreme (core/events_mixin.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar DefaultEventsStrategy = require(\"./events_strategy\"),\n  each = require(\"./utils/iterator\").each,\n  isPlainObject = require(\"./utils/type\").isPlainObject;\nmodule.exports = {\n  ctor: function ctor() {\n    this._events = {};\n    this.setEventsStrategy(new DefaultEventsStrategy(this));\n  },\n  setEventsStrategy: function setEventsStrategy(strategy) {\n    if (\"function\" === typeof strategy) {\n      strategy = strategy(this);\n    }\n    this._eventsStrategy = strategy;\n  },\n  hasEvent: function hasEvent(eventName) {\n    return this._eventsStrategy.hasEvent(eventName);\n  },\n  fireEvent: function fireEvent(eventName, eventArgs) {\n    this._eventsStrategy.fireEvent(eventName, eventArgs);\n    return this;\n  },\n  on: function on(eventName, eventHandler) {\n    if (isPlainObject(eventName)) {\n      each(eventName, function (e, h) {\n        this.on(e, h);\n      }.bind(this));\n    } else {\n      this._eventsStrategy.on(eventName, eventHandler);\n    }\n    return this;\n  },\n  off: function off(eventName, eventHandler) {\n    this._eventsStrategy.off(eventName, eventHandler);\n    return this;\n  },\n  _disposeEvents: function _disposeEvents() {\n    this._eventsStrategy.dispose();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}