{"ast":null,"code":"/**\r\n * DevExtreme (events/core/wheel.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n  eventsEngine = require(\"../../events/core/events_engine\"),\n  domAdapter = require(\"../../core/dom_adapter\"),\n  callOnce = require(\"../../core/utils/call_once\"),\n  registerEvent = require(\"./event_registrator\"),\n  eventUtils = require(\"../utils\");\nvar EVENT_NAME = \"dxmousewheel\",\n  EVENT_NAMESPACE = \"dxWheel\";\nvar getWheelEventName = callOnce(function () {\n  return domAdapter.hasDocumentProperty(\"onwheel\") ? \"wheel\" : \"mousewheel\";\n});\nvar wheel = {\n  setup: function setup(element) {\n    var $element = $(element);\n    eventsEngine.on($element, eventUtils.addNamespace(getWheelEventName(), EVENT_NAMESPACE), wheel._wheelHandler.bind(wheel));\n  },\n  teardown: function teardown(element) {\n    eventsEngine.off(element, \".\" + EVENT_NAMESPACE);\n  },\n  _wheelHandler: function _wheelHandler(e) {\n    var delta = this._getWheelDelta(e.originalEvent);\n    eventUtils.fireEvent({\n      type: EVENT_NAME,\n      originalEvent: e,\n      delta: delta,\n      pointerType: \"mouse\"\n    });\n    e.stopPropagation();\n  },\n  _getWheelDelta: function _getWheelDelta(event) {\n    return event.wheelDelta ? event.wheelDelta : 30 * -event.deltaY;\n  }\n};\nregisterEvent(EVENT_NAME, wheel);\nexports.name = EVENT_NAME;","map":null,"metadata":{},"sourceType":"script"}