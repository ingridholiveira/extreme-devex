{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/ready_callbacks.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar domAdapter = require(\"../dom_adapter\");\nvar injector = require(\"./dependency_injector\");\nvar windowUtils = require(\"./window\");\nvar callOnce = require(\"./call_once\");\nvar callbacks = [];\nvar isReady = function isReady() {\n  return \"complete\" === domAdapter.getReadyState() || \"loading\" !== domAdapter.getReadyState() && !domAdapter.getDocumentElement().doScroll;\n};\nvar subscribeReady = callOnce(function () {\n  var removeListener = domAdapter.listen(domAdapter.getDocument(), \"DOMContentLoaded\", function () {\n    readyCallbacks.fire();\n    removeListener();\n  });\n});\nvar readyCallbacks = {\n  add: function add(callback) {\n    var hasWindow = windowUtils.hasWindow();\n    if (hasWindow && isReady()) {\n      callback();\n    } else {\n      callbacks.push(callback);\n      hasWindow && subscribeReady();\n    }\n  },\n  fire: function fire() {\n    callbacks.forEach(function (callback) {\n      return callback();\n    });\n    callbacks = [];\n  }\n};\nmodule.exports = injector(readyCallbacks);","map":null,"metadata":{},"sourceType":"script"}