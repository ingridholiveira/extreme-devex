{"ast":null,"code":"/**\r\n * DevExtreme (ui/text_box/texteditor_button_collection/button.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) {\n        descriptor.writable = true;\n      }\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) {\n      defineProperties(Constructor.prototype, protoProps);\n    }\n    if (staticProps) {\n      defineProperties(Constructor, staticProps);\n    }\n    return Constructor;\n  };\n}();\nvar _renderer = require(\"../../../core/renderer\");\nvar _renderer2 = _interopRequireDefault(_renderer);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar TextEditorButton = function () {\n  function TextEditorButton(name, editor, options) {\n    _classCallCheck(this, TextEditorButton);\n    this.instance = null;\n    this.$container = null;\n    this.$placeMarker = null;\n    this.editor = editor;\n    this.name = name;\n    this.options = options || {};\n  }\n  _createClass(TextEditorButton, [{\n    key: \"_addPlaceMarker\",\n    value: function value($container) {\n      this.$placeMarker = (0, _renderer2.default)(\"<div>\").appendTo($container);\n    }\n  }, {\n    key: \"_addToContainer\",\n    value: function value($element) {\n      var $placeMarker = this.$placeMarker,\n        $container = this.$container;\n      $placeMarker ? $placeMarker.replaceWith($element) : $element.appendTo($container);\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function value() {\n      throw \"Not implemented\";\n    }\n  }, {\n    key: \"_create\",\n    value: function value() {\n      throw \"Not implemented\";\n    }\n  }, {\n    key: \"_isRendered\",\n    value: function value() {\n      return !!this.instance;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function value() {\n      var editor = this.editor,\n        options = this.options;\n      return options.visible || !editor.option(\"readOnly\");\n    }\n  }, {\n    key: \"_isDisabled\",\n    value: function value() {\n      throw \"Not implemented\";\n    }\n  }, {\n    key: \"_shouldRender\",\n    value: function value() {\n      return this._isVisible() && !this._isRendered();\n    }\n  }, {\n    key: \"dispose\",\n    value: function value() {\n      var instance = this.instance,\n        $placeMarker = this.$placeMarker;\n      if (instance) {\n        instance.dispose ? instance.dispose() : instance.remove();\n        this.instance = null;\n      }\n      $placeMarker && $placeMarker.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function value() {\n      var $container = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.$container;\n      this.$container = $container;\n      if (this._isVisible()) {\n        var _create2 = this._create(),\n          instance = _create2.instance,\n          $element = _create2.$element;\n        this.instance = instance;\n        this._attachEvents(instance, $element);\n      } else {\n        this._addPlaceMarker($container);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function value() {\n      if (this._shouldRender()) {\n        this.render();\n      }\n      return !!this.instance;\n    }\n  }]);\n  return TextEditorButton;\n}();\nexports.default = TextEditorButton;","map":null,"metadata":{},"sourceType":"script"}