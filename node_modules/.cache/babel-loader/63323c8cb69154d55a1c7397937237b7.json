{"ast":null,"code":"/**\r\n * DevExtreme (events/gesture/swipeable.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar swipeEvents = require(\"../swipe\"),\n  eventsEngine = require(\"../../events/core/events_engine\"),\n  DOMComponent = require(\"../../core/dom_component\"),\n  each = require(\"../../core/utils/iterator\").each,\n  eventUtils = require(\"../utils\"),\n  extend = require(\"../../core/utils/extend\").extend,\n  publicComponentUtils = require(\"../../core/utils/public_component\");\nvar DX_SWIPEABLE = \"dxSwipeable\",\n  SWIPEABLE_CLASS = \"dx-swipeable\",\n  ACTION_TO_EVENT_MAP = {\n    onStart: swipeEvents.start,\n    onUpdated: swipeEvents.swipe,\n    onEnd: swipeEvents.end,\n    onCancel: \"dxswipecancel\"\n  };\nvar Swipeable = DOMComponent.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      elastic: true,\n      immediate: false,\n      direction: \"horizontal\",\n      itemSizeFunc: null,\n      onStart: null,\n      onUpdated: null,\n      onEnd: null,\n      onCancel: null\n    });\n  },\n  _render: function _render() {\n    this.callBase();\n    this.$element().addClass(SWIPEABLE_CLASS);\n    this._attachEventHandlers();\n  },\n  _attachEventHandlers: function _attachEventHandlers() {\n    this._detachEventHandlers();\n    if (this.option(\"disabled\")) {\n      return;\n    }\n    var NAME = this.NAME;\n    this._createEventData();\n    each(ACTION_TO_EVENT_MAP, function (actionName, eventName) {\n      var action = this._createActionByOption(actionName, {\n        context: this\n      });\n      eventName = eventUtils.addNamespace(eventName, NAME);\n      eventsEngine.on(this.$element(), eventName, this._eventData, function (e) {\n        return action({\n          event: e\n        });\n      });\n    }.bind(this));\n  },\n  _createEventData: function _createEventData() {\n    this._eventData = {\n      elastic: this.option(\"elastic\"),\n      itemSizeFunc: this.option(\"itemSizeFunc\"),\n      direction: this.option(\"direction\"),\n      immediate: this.option(\"immediate\")\n    };\n  },\n  _detachEventHandlers: function _detachEventHandlers() {\n    eventsEngine.off(this.$element(), \".\" + DX_SWIPEABLE);\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"disabled\":\n      case \"onStart\":\n      case \"onUpdated\":\n      case \"onEnd\":\n      case \"onCancel\":\n      case \"elastic\":\n      case \"immediate\":\n      case \"itemSizeFunc\":\n      case \"direction\":\n        this._detachEventHandlers();\n        this._attachEventHandlers();\n        break;\n      case \"rtlEnabled\":\n        break;\n      default:\n        this.callBase(args);\n    }\n  }\n});\npublicComponentUtils.name(Swipeable, DX_SWIPEABLE);\nmodule.exports = Swipeable;","map":null,"metadata":{},"sourceType":"script"}