{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/error.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"./extend\").extend,\n  consoleUtils = require(\"./console\"),\n  stringUtils = require(\"./string\"),\n  version = require(\"../version\");\nvar ERROR_URL = \"http://js.devexpress.com/error/\" + version.split(\".\").slice(0, 2).join(\"_\") + \"/\";\nmodule.exports = function (baseErrors, errors) {\n  var exports = {\n    ERROR_MESSAGES: extend(errors, baseErrors),\n    Error: function Error() {\n      return makeError([].slice.call(arguments));\n    },\n    log: function log(id) {\n      var method = \"log\";\n      if (/^E\\d+$/.test(id)) {\n        method = \"error\";\n      } else {\n        if (/^W\\d+$/.test(id)) {\n          method = \"warn\";\n        }\n      }\n      consoleUtils.logger[method](\"log\" === method ? id : combineMessage([].slice.call(arguments)));\n    }\n  };\n  var combineMessage = function combineMessage(args) {\n    var id = args[0];\n    args = args.slice(1);\n    return formatMessage(id, formatDetails(id, args));\n  };\n  var formatDetails = function formatDetails(id, args) {\n    args = [exports.ERROR_MESSAGES[id]].concat(args);\n    return stringUtils.format.apply(this, args).replace(/\\.*\\s*?$/, \"\");\n  };\n  var formatMessage = function formatMessage(id, details) {\n    return stringUtils.format.apply(this, [\"{0} - {1}. See:\\n{2}\", id, details, getErrorUrl(id)]);\n  };\n  var makeError = function makeError(args) {\n    var id, details, message, url;\n    id = args[0];\n    args = args.slice(1);\n    details = formatDetails(id, args);\n    url = getErrorUrl(id);\n    message = formatMessage(id, details);\n    return extend(new Error(message), {\n      __id: id,\n      __details: details,\n      url: url\n    });\n  };\n  var getErrorUrl = function getErrorUrl(id) {\n    return ERROR_URL + id;\n  };\n  return exports;\n};","map":null,"metadata":{},"sourceType":"script"}