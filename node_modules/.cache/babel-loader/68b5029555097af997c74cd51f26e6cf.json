{"ast":null,"code":"/**\r\n * DevExtreme (ui/widget/selectors.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n  domAdapter = require(\"../../core/dom_adapter\");\nvar _focusable = function _focusable(element, tabIndex) {\n  if (!visible(element)) {\n    return false;\n  }\n  var nodeName = element.nodeName.toLowerCase(),\n    isTabIndexNotNaN = !isNaN(tabIndex),\n    isDisabled = element.disabled,\n    isDefaultFocus = /^(input|select|textarea|button|object|iframe)$/.test(nodeName),\n    isHyperlink = \"a\" === nodeName,\n    isFocusable = true,\n    isContentEditable = element.isContentEditable;\n  if (isDefaultFocus || isContentEditable) {\n    isFocusable = !isDisabled;\n  } else {\n    if (isHyperlink) {\n      isFocusable = element.href || isTabIndexNotNaN;\n    } else {\n      isFocusable = isTabIndexNotNaN;\n    }\n  }\n  return isFocusable;\n};\nvar visible = function visible(element) {\n  var $element = $(element);\n  return $element.is(\":visible\") && \"hidden\" !== $element.css(\"visibility\") && \"hidden\" !== $element.parents().css(\"visibility\");\n};\nmodule.exports = {\n  focusable: function focusable(index, element) {\n    return _focusable(element, $(element).attr(\"tabIndex\"));\n  },\n  tabbable: function tabbable(index, element) {\n    var tabIndex = $(element).attr(\"tabIndex\");\n    return (isNaN(tabIndex) || tabIndex >= 0) && _focusable(element, tabIndex);\n  },\n  focused: function focused($element) {\n    var element = $($element).get(0);\n    return domAdapter.getActiveElement() === element;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}