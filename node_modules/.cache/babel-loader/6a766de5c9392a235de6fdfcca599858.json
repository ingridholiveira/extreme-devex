{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel/excel.font_helper.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _type = require(\"../../core/utils/type\");\nvar _excel = require(\"./excel.tag_helper\");\nvar _excel2 = _interopRequireDefault(_excel);\nvar _excel3 = require(\"./excel.color_helper\");\nvar _excel4 = _interopRequireDefault(_excel3);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar fontHelper = {\n  tryCreateTag: function tryCreateTag(sourceObj) {\n    var result = null;\n    if ((0, _type.isDefined)(sourceObj)) {\n      result = {\n        size: sourceObj.size,\n        name: sourceObj.name,\n        family: sourceObj.family,\n        scheme: sourceObj.scheme,\n        bold: sourceObj.bold,\n        italic: sourceObj.italic,\n        underline: sourceObj.underline,\n        color: _excel4.default.tryCreateTag(sourceObj.color)\n      };\n      if (fontHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n    return result;\n  },\n  copy: function copy(source) {\n    var result = null;\n    if ((0, _type.isDefined)(source)) {\n      result = {};\n      if (void 0 !== source.size) {\n        result.size = source.size;\n      }\n      if (void 0 !== source.name) {\n        result.name = source.name;\n      }\n      if (void 0 !== source.family) {\n        result.family = source.family;\n      }\n      if (void 0 !== source.scheme) {\n        result.scheme = source.scheme;\n      }\n      if (void 0 !== source.bold) {\n        result.bold = source.bold;\n      }\n      if (void 0 !== source.italic) {\n        result.italic = source.italic;\n      }\n      if (void 0 !== source.underline) {\n        result.underline = source.underline;\n      }\n      if (void 0 !== source.color) {\n        result.color = _excel4.default.copy(source.color);\n      }\n    }\n    return result;\n  },\n  areEqual: function areEqual(leftTag, rightTag) {\n    return fontHelper.isEmpty(leftTag) && fontHelper.isEmpty(rightTag) || (0, _type.isDefined)(leftTag) && (0, _type.isDefined)(rightTag) && leftTag.size === rightTag.size && leftTag.name === rightTag.name && leftTag.family === rightTag.family && leftTag.scheme === rightTag.scheme && (leftTag.bold === rightTag.bold || !leftTag.bold === !rightTag.bold) && (leftTag.italic === rightTag.italic || !leftTag.italic === !rightTag.italic) && leftTag.underline === rightTag.underline && _excel4.default.areEqual(leftTag.color, rightTag.color);\n  },\n  isEmpty: function isEmpty(tag) {\n    return !(0, _type.isDefined)(tag) || !(0, _type.isDefined)(tag.size) && !(0, _type.isDefined)(tag.name) && !(0, _type.isDefined)(tag.family) && !(0, _type.isDefined)(tag.scheme) && (!(0, _type.isDefined)(tag.bold) || !tag.bold) && (!(0, _type.isDefined)(tag.italic) || !tag.italic) && !(0, _type.isDefined)(tag.underline) && _excel4.default.isEmpty(tag.color);\n  },\n  toXml: function toXml(tag) {\n    var content = [(0, _type.isDefined)(tag.bold) && tag.bold ? _excel2.default.toXml(\"b\", {}) : \"\", (0, _type.isDefined)(tag.size) ? _excel2.default.toXml(\"sz\", {\n      val: tag.size\n    }) : \"\", (0, _type.isDefined)(tag.color) ? _excel4.default.toXml(\"color\", tag.color) : \"\", (0, _type.isDefined)(tag.name) ? _excel2.default.toXml(\"name\", {\n      val: tag.name\n    }) : \"\", (0, _type.isDefined)(tag.family) ? _excel2.default.toXml(\"family\", {\n      val: tag.family\n    }) : \"\", (0, _type.isDefined)(tag.scheme) ? _excel2.default.toXml(\"scheme\", {\n      val: tag.scheme\n    }) : \"\", (0, _type.isDefined)(tag.italic) && tag.italic ? _excel2.default.toXml(\"i\", {}) : \"\", (0, _type.isDefined)(tag.underline) ? _excel2.default.toXml(\"u\", {\n      val: tag.underline\n    }) : \"\"].join(\"\");\n    return _excel2.default.toXml(\"font\", {}, content);\n  }\n};\nexports.default = fontHelper;","map":null,"metadata":{},"sourceType":"script"}