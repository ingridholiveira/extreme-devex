{"ast":null,"code":"/**\r\n * DevExtreme (events/core/event_registrator.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar each = require(\"../../core/utils/iterator\").each,\n  callbacks = require(\"./event_registrator_callbacks\");\nvar registerEvent = function registerEvent(name, eventObject) {\n  var strategy = {};\n  if (\"noBubble\" in eventObject) {\n    strategy.noBubble = eventObject.noBubble;\n  }\n  if (\"bindType\" in eventObject) {\n    strategy.bindType = eventObject.bindType;\n  }\n  if (\"delegateType\" in eventObject) {\n    strategy.delegateType = eventObject.delegateType;\n  }\n  each([\"setup\", \"teardown\", \"add\", \"remove\", \"trigger\", \"handle\", \"_default\", \"dispose\"], function (_, methodName) {\n    if (!eventObject[methodName]) {\n      return;\n    }\n    strategy[methodName] = function () {\n      var args = [].slice.call(arguments);\n      args.unshift(this);\n      return eventObject[methodName].apply(eventObject, args);\n    };\n  });\n  callbacks.fire(name, strategy);\n};\nregisterEvent.callbacks = callbacks;\nmodule.exports = registerEvent;","map":null,"metadata":{},"sourceType":"script"}