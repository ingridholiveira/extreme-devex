{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _support = require(\"../core/utils/support\");\nvar _support2 = _interopRequireDefault(_support);\nvar _iterator = require(\"../core/utils/iterator\");\nvar _browser = require(\"../core/utils/browser\");\nvar _browser2 = _interopRequireDefault(_browser);\nvar _devices = require(\"../core/devices\");\nvar _devices2 = _interopRequireDefault(_devices);\nvar _event_registrator = require(\"./core/event_registrator\");\nvar _event_registrator2 = _interopRequireDefault(_event_registrator);\nvar _touch = require(\"./pointer/touch\");\nvar _touch2 = _interopRequireDefault(_touch);\nvar _mspointer = require(\"./pointer/mspointer\");\nvar _mspointer2 = _interopRequireDefault(_mspointer);\nvar _mouse = require(\"./pointer/mouse\");\nvar _mouse2 = _interopRequireDefault(_mouse);\nvar _mouse_and_touch = require(\"./pointer/mouse_and_touch\");\nvar _mouse_and_touch2 = _interopRequireDefault(_mouse_and_touch);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar getStrategy = function getStrategy(support, device, browser) {\n  if (support.pointerEvents && browser.msie) {\n    return _mspointer2.default;\n  }\n  var tablet = device.tablet,\n    phone = device.phone;\n  if (support.touch && !(tablet || phone)) {\n    return _mouse_and_touch2.default;\n  }\n  if (support.touch) {\n    return _touch2.default;\n  }\n  return _mouse2.default;\n};\nvar EventStrategy = getStrategy(_support2.default, _devices2.default.real(), _browser2.default);\n(0, _iterator.each)(EventStrategy.map, function (pointerEvent, originalEvents) {\n  (0, _event_registrator2.default)(pointerEvent, new EventStrategy(pointerEvent, originalEvents));\n});\nvar pointer = {\n  down: \"dxpointerdown\",\n  up: \"dxpointerup\",\n  move: \"dxpointermove\",\n  cancel: \"dxpointercancel\",\n  enter: \"dxpointerenter\",\n  leave: \"dxpointerleave\",\n  over: \"dxpointerover\",\n  out: \"dxpointerout\"\n};\nmodule.exports = pointer;","map":null,"metadata":{},"sourceType":"script"}