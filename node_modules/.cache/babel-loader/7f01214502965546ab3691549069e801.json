{"ast":null,"code":"/**\r\n * DevExtreme (ui/shared/grouped_data_converter_mixin.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _type = require(\"../../core/utils/type\");\nvar isCorrectStructure = function isCorrectStructure(data) {\n  return Array.isArray(data) && data.every(function (item) {\n    var hasTwoFields = 2 === Object.keys(item).length;\n    var hasCorrectFields = \"key\" in item && \"items\" in item;\n    return hasTwoFields && hasCorrectFields && Array.isArray(item.items);\n  });\n};\nexports.default = {\n  _getSpecificDataSourceOption: function _getSpecificDataSourceOption() {\n    var groupKey = \"key\";\n    var dataSource = this.option(\"dataSource\");\n    var hasSimpleItems = false;\n    var data = {};\n    if (this._getGroupedOption() && isCorrectStructure(dataSource)) {\n      data = dataSource.reduce(function (accumulator, item) {\n        var items = item.items.map(function (innerItem) {\n          if (!(0, _type.isObject)(innerItem)) {\n            innerItem = {\n              text: innerItem\n            };\n            hasSimpleItems = true;\n          }\n          if (!(groupKey in innerItem)) {\n            innerItem[groupKey] = item.key;\n          }\n          return innerItem;\n        });\n        return accumulator.concat(items);\n      }, []);\n      dataSource = {\n        store: {\n          type: \"array\",\n          data: data\n        },\n        group: {\n          selector: \"key\",\n          keepInitialKeyOrder: true\n        }\n      };\n      if (hasSimpleItems) {\n        dataSource.searchExpr = \"text\";\n      }\n    }\n    return dataSource;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}