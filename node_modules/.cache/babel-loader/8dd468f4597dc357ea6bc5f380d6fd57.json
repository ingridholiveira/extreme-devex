{"ast":null,"code":"/**\r\n * DevExtreme (exporter/file_saver.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\"),\n  domAdapter = require(\"../core/dom_adapter\"),\n  windowUtils = require(\"../core/utils/window\"),\n  window = windowUtils.getWindow(),\n  navigator = windowUtils.getNavigator(),\n  eventsEngine = require(\"../events/core/events_engine\"),\n  errors = require(\"../ui/widget/ui.errors\"),\n  typeUtils = require(\"../core/utils/type\"),\n  FILE_EXTESIONS = {\n    EXCEL: \"xlsx\",\n    CSS: \"css\",\n    PNG: \"png\",\n    JPEG: \"jpeg\",\n    GIF: \"gif\",\n    SVG: \"svg\",\n    PDF: \"pdf\"\n  };\nvar MIME_TYPES = exports.MIME_TYPES = {\n  CSS: \"text/css\",\n  EXCEL: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  PNG: \"image/png\",\n  JPEG: \"image/jpeg\",\n  GIF: \"image/gif\",\n  SVG: \"image/svg+xml\",\n  PDF: \"application/pdf\"\n};\nexports.fileSaver = {\n  _revokeObjectURLTimeout: 3e4,\n  _getDataUri: function _getDataUri(format, data) {\n    return \"data:\" + MIME_TYPES[format] + \";base64,\" + data;\n  },\n  _linkDownloader: function _linkDownloader(fileName, href, clickHandler) {\n    var exportLinkElement = domAdapter.createElement(\"a\"),\n      attributes = {\n        download: fileName,\n        href: href\n      };\n    eventsEngine.on($(exportLinkElement), \"click\", function () {\n      $(exportLinkElement).remove();\n      clickHandler && clickHandler.apply(this, arguments);\n    });\n    domAdapter.getBody().appendChild(exportLinkElement);\n    $(exportLinkElement).css({\n      display: \"none\"\n    }).text(\"load\").attr(attributes)[0].click();\n    return exportLinkElement;\n  },\n  _formDownloader: function _formDownloader(proxyUrl, fileName, contentType, data) {\n    var formAttributes = {\n        method: \"post\",\n        action: proxyUrl,\n        enctype: \"multipart/form-data\"\n      },\n      exportForm = $(\"<form>\").css({\n        display: \"none\"\n      }).attr(formAttributes);\n    exportForm.append('<input type=\"hidden\" name=\"fileName\" value=\"' + fileName + '\" />');\n    exportForm.append('<input type=\"hidden\" name=\"contentType\" value=\"' + contentType + '\" />');\n    exportForm.append('<input type=\"hidden\" name=\"data\" value=\"' + data + '\" />');\n    exportForm.appendTo(\"body\");\n    eventsEngine.trigger(exportForm, \"submit\");\n    if (eventsEngine.trigger(exportForm, \"submit\")) {\n      exportForm.remove();\n    }\n  },\n  _saveByProxy: function _saveByProxy(proxyUrl, fileName, format, data) {\n    return this._formDownloader(proxyUrl, fileName, MIME_TYPES[format], data);\n  },\n  _winJSBlobSave: function _winJSBlobSave(blob, fileName, format) {\n    var savePicker = new Windows.Storage.Pickers.FileSavePicker();\n    savePicker.suggestedStartLocation = Windows.Storage.Pickers.PickerLocationId.documentsLibrary;\n    savePicker.fileTypeChoices.insert(MIME_TYPES[format], [\".\" + FILE_EXTESIONS[format]]);\n    savePicker.suggestedFileName = fileName;\n    savePicker.pickSaveFileAsync().then(function (file) {\n      if (file) {\n        file.openAsync(Windows.Storage.FileAccessMode.readWrite).then(function (outputStream) {\n          var inputStream = blob.msDetachStream();\n          Windows.Storage.Streams.RandomAccessStream.copyAsync(inputStream, outputStream).then(function () {\n            outputStream.flushAsync().done(function () {\n              inputStream.close();\n              outputStream.close();\n            });\n          });\n        });\n      }\n    });\n  },\n  _saveBlobAs: function _saveBlobAs(fileName, format, data, linkClick) {\n    var that = this;\n    that._blobSaved = false;\n    if (typeUtils.isDefined(navigator.msSaveOrOpenBlob)) {\n      navigator.msSaveOrOpenBlob(data, fileName);\n      that._blobSaved = true;\n    } else {\n      if (typeUtils.isDefined(window.WinJS)) {\n        that._winJSBlobSave(data, fileName, format);\n        that._blobSaved = true;\n      } else {\n        var URL = window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL;\n        if (typeUtils.isDefined(URL)) {\n          var objectURL = URL.createObjectURL(data),\n            revokeObjectURLTimeout = that._revokeObjectURLTimeout,\n            clickHandler = function clickHandler(e) {\n              setTimeout(function () {\n                URL.revokeObjectURL(objectURL);\n              }, revokeObjectURLTimeout);\n            };\n          return that._linkDownloader(fileName, objectURL, clickHandler);\n        }\n      }\n    }\n  },\n  saveAs: function saveAs(fileName, format, data, proxyURL, linkClick, forceProxy) {\n    fileName += \".\" + FILE_EXTESIONS[format];\n    if (forceProxy) {\n      this._saveByProxy(proxyURL, fileName, format, data);\n    } else {\n      if (typeUtils.isFunction(window.Blob)) {\n        this._saveBlobAs(fileName, format, data, linkClick);\n      } else {\n        if (typeUtils.isDefined(proxyURL) && !typeUtils.isDefined(navigator.userAgent.match(/iPad/i))) {\n          this._saveByProxy(proxyURL, fileName, format, data);\n        } else {\n          if (!typeUtils.isDefined(navigator.userAgent.match(/iPad/i))) {\n            errors.log(\"E1034\");\n          }\n          this._linkDownloader(fileName, this._getDataUri(format, data), linkClick);\n        }\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}