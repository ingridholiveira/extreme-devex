{"ast":null,"code":"/**\r\n * DevExtreme (ui/collection/ui.collection_widget.edit.strategy.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n  Class = require(\"../../core/class\"),\n  commonUtils = require(\"../../core/utils/common\"),\n  abstract = Class.abstract;\nvar EditStrategy = Class.inherit({\n  ctor: function ctor(collectionWidget) {\n    this._collectionWidget = collectionWidget;\n  },\n  getIndexByItemData: abstract,\n  getItemDataByIndex: abstract,\n  getKeysByItems: abstract,\n  getItemsByKeys: abstract,\n  itemsGetter: abstract,\n  getKeyByIndex: function getKeyByIndex(index) {\n    var resultIndex = this._denormalizeItemIndex(index);\n    return this.getKeysByItems([this.getItemDataByIndex(resultIndex)])[0];\n  },\n  _equalKeys: function _equalKeys(key1, key2) {\n    if (this._collectionWidget._isKeySpecified()) {\n      return commonUtils.equalByValue(key1, key2);\n    } else {\n      return key1 === key2;\n    }\n  },\n  beginCache: function beginCache() {\n    this._cache = {};\n  },\n  endCache: function endCache() {\n    this._cache = null;\n  },\n  getIndexByKey: abstract,\n  getNormalizedIndex: function getNormalizedIndex(value) {\n    if (this._isNormalizedItemIndex(value)) {\n      return value;\n    }\n    if (this._isItemIndex(value)) {\n      return this._normalizeItemIndex(value);\n    }\n    if (this._isDOMNode(value)) {\n      return this._getNormalizedItemIndex(value);\n    }\n    return this._normalizeItemIndex(this.getIndexByItemData(value));\n  },\n  getIndex: function getIndex(value) {\n    if (this._isNormalizedItemIndex(value)) {\n      return this._denormalizeItemIndex(value);\n    }\n    if (this._isItemIndex(value)) {\n      return value;\n    }\n    if (this._isDOMNode(value)) {\n      return this._denormalizeItemIndex(this._getNormalizedItemIndex(value));\n    }\n    return this.getIndexByItemData(value);\n  },\n  getItemElement: function getItemElement(value) {\n    if (this._isNormalizedItemIndex(value)) {\n      return this._getItemByNormalizedIndex(value);\n    }\n    if (this._isItemIndex(value)) {\n      return this._getItemByNormalizedIndex(this._normalizeItemIndex(value));\n    }\n    if (this._isDOMNode(value)) {\n      return $(value);\n    }\n    var normalizedItemIndex = this._normalizeItemIndex(this.getIndexByItemData(value));\n    return this._getItemByNormalizedIndex(normalizedItemIndex);\n  },\n  deleteItemAtIndex: abstract,\n  itemPlacementFunc: function itemPlacementFunc(movingIndex, destinationIndex) {\n    return this._itemsFromSameParent(movingIndex, destinationIndex) && movingIndex < destinationIndex ? \"after\" : \"before\";\n  },\n  moveItemAtIndexToIndex: abstract,\n  _isNormalizedItemIndex: function _isNormalizedItemIndex(index) {\n    return \"number\" === typeof index && Math.round(index) === index;\n  },\n  _isDOMNode: function _isDOMNode(value) {\n    var $value;\n    try {\n      $value = $(value);\n    } catch (error) {\n      return false;\n    }\n    return $value && $value.length && $value.get(0).nodeType;\n  },\n  _isItemIndex: abstract,\n  _getNormalizedItemIndex: abstract,\n  _normalizeItemIndex: abstract,\n  _denormalizeItemIndex: abstract,\n  _getItemByNormalizedIndex: abstract,\n  _itemsFromSameParent: abstract\n});\nmodule.exports = EditStrategy;","map":null,"metadata":{},"sourceType":"script"}