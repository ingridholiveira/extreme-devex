{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 19.2.2-beta\n * Build date: Tue Oct 01 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tree_1 = require(\"./tree\");\nvar utils_1 = require(\"./utils\");\nfunction getChanges(current, prev) {\n  var changesAccum = {\n    options: {},\n    templates: {}\n  };\n  compare(current, prev, changesAccum);\n  return changesAccum;\n}\nexports.getChanges = getChanges;\nfunction compare(current, prev, changesAccum) {\n  if (!prev) {\n    changesAccum.options[current.fullName] = tree_1.buildNode(current, changesAccum.templates, true);\n    return;\n  }\n  appendRemovedValues(current.options, prev.options, current.fullName, changesAccum.options);\n  appendRemovedValues(current.configCollections, prev.configCollections, current.fullName, changesAccum.options);\n  appendRemovedValues(current.configs, prev.configs, current.fullName, changesAccum.options);\n  compareCollections(current, prev, changesAccum);\n  for (var _i = 0, _a = Object.keys(current.configs); _i < _a.length; _i++) {\n    var key = _a[_i];\n    compare(current.configs[key], prev.configs[key], changesAccum);\n  }\n  for (var _b = 0, _c = Object.keys(current.options); _b < _c.length; _b++) {\n    var key = _c[_b];\n    if (current.options[key] === prev.options[key]) {\n      continue;\n    }\n    changesAccum.options[utils_1.mergeNameParts(current.fullName, key)] = current.options[key];\n  }\n  compareTemplates(current, prev, changesAccum);\n}\nfunction compareTemplates(current, prev, changesAccum) {\n  var currentTemplatesOptions = {};\n  var currentTemplates = {};\n  var prevTemplatesOptions = {};\n  var prevTemplates = {};\n  tree_1.buildTemplates(current, currentTemplatesOptions, currentTemplates);\n  tree_1.buildTemplates(prev, prevTemplatesOptions, prevTemplates);\n  appendRemovedValues(currentTemplatesOptions, prevTemplatesOptions, current.fullName, changesAccum.options);\n  // TODO: support switching to default templates\n  // appendRemovedValues(currentTemplates, prevTemplates, \"\", changesAccum.templates);\n  for (var _i = 0, _a = Object.keys(currentTemplatesOptions); _i < _a.length; _i++) {\n    var key = _a[_i];\n    if (currentTemplatesOptions[key] === prevTemplatesOptions[key]) {\n      continue;\n    }\n    changesAccum.options[utils_1.mergeNameParts(current.fullName, key)] = currentTemplatesOptions[key];\n  }\n  for (var _b = 0, _c = Object.keys(currentTemplates); _b < _c.length; _b++) {\n    var key = _c[_b];\n    var currentTemplate = currentTemplates[key];\n    var prevTemplate = prevTemplates[key];\n    if (prevTemplate && currentTemplate.content === prevTemplate.content) {\n      continue;\n    }\n    changesAccum.templates[key] = currentTemplate;\n  }\n}\nfunction appendRemovedValues(current, prev, path, changesAccum) {\n  var removedKeys = Object.keys(prev).filter(function (key) {\n    return Object.keys(current).indexOf(key) < 0;\n  });\n  for (var _i = 0, removedKeys_1 = removedKeys; _i < removedKeys_1.length; _i++) {\n    var key = removedKeys_1[_i];\n    changesAccum[utils_1.mergeNameParts(path, key)] = undefined;\n  }\n}\nfunction compareCollections(current, prev, changesAccum) {\n  var _loop_1 = function _loop_1(key) {\n    var currentCollection = current.configCollections[key];\n    var prevCollection = prev.configCollections[key] || [];\n    if (!currentCollection || currentCollection.length !== prevCollection.length) {\n      var updatedCollection_1 = [];\n      currentCollection.map(function (item) {\n        var config = tree_1.buildNode(item, changesAccum.templates, true);\n        updatedCollection_1.push(config);\n      });\n      changesAccum.options[utils_1.mergeNameParts(current.fullname, key)] = updatedCollection_1;\n      return \"continue\";\n    }\n    for (var i = 0; i < currentCollection.length; i++) {\n      compare(currentCollection[i], prevCollection[i], changesAccum);\n    }\n  };\n  for (var _i = 0, _a = Object.keys(current.configCollections); _i < _a.length; _i++) {\n    var key = _a[_i];\n    _loop_1(key);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}