{"ast":null,"code":"/**\r\n * DevExtreme (ui/text_box/utils.caret.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\nvar _renderer2 = _interopRequireDefault(_renderer);\nvar _type = require(\"../../core/utils/type\");\nvar _browser = require(\"../../core/utils/browser\");\nvar _browser2 = _interopRequireDefault(_browser);\nvar _dom_adapter = require(\"../../core/dom_adapter\");\nvar _dom_adapter2 = _interopRequireDefault(_dom_adapter);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar isFocusingOnCaretChange = _browser2.default.msie || _browser2.default.safari;\nvar getCaret = function getCaret(input) {\n  var range = void 0;\n  try {\n    range = {\n      start: input.selectionStart,\n      end: input.selectionEnd\n    };\n  } catch (e) {\n    range = {\n      start: 0,\n      end: 0\n    };\n  }\n  return range;\n};\nvar setCaret = function setCaret(input, position) {\n  if (!_dom_adapter2.default.getBody().contains(input)) {\n    return;\n  }\n  try {\n    input.selectionStart = position.start;\n    input.selectionEnd = position.end;\n  } catch (e) {}\n};\nvar caret = function caret(input, position) {\n  input = (0, _renderer2.default)(input).get(0);\n  if (!(0, _type.isDefined)(position)) {\n    return getCaret(input);\n  }\n  if (isFocusingOnCaretChange && _dom_adapter2.default.getActiveElement() !== input) {\n    return;\n  }\n  setCaret(input, position);\n};\nmodule.exports = caret;","map":null,"metadata":{},"sourceType":"script"}