{"ast":null,"code":"/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.context.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n  EditDecoratorMenuHelperMixin = require(\"./ui.list.edit.decorator_menu_helper\"),\n  messageLocalization = require(\"../../localization/message\"),\n  registerDecorator = require(\"./ui.list.edit.decorator_registry\").register,\n  EditDecorator = require(\"./ui.list.edit.decorator\"),\n  Overlay = require(\"../overlay\"),\n  ListBase = require(\"./ui.list.base\");\nvar CONTEXTMENU_CLASS = \"dx-list-context-menu\",\n  CONTEXTMENU_MENUCONTENT_CLASS = \"dx-list-context-menucontent\";\nregisterDecorator(\"menu\", \"context\", EditDecorator.inherit({\n  _init: function _init() {\n    var $menu = $(\"<div>\").addClass(CONTEXTMENU_CLASS);\n    this._list.$element().append($menu);\n    this._menu = this._renderOverlay($menu);\n  },\n  _renderOverlay: function _renderOverlay($element) {\n    return this._list._createComponent($element, Overlay, {\n      shading: false,\n      deferRendering: true,\n      closeOnTargetScroll: true,\n      closeOnOutsideClick: function closeOnOutsideClick(e) {\n        return !$(e.target).closest(\".\" + CONTEXTMENU_CLASS).length;\n      },\n      animation: {\n        show: {\n          type: \"slide\",\n          duration: 300,\n          from: {\n            height: 0,\n            opacity: 1\n          },\n          to: {\n            height: function () {\n              return this._$menuList.outerHeight();\n            }.bind(this),\n            opacity: 1\n          }\n        },\n        hide: {\n          type: \"slide\",\n          duration: 0,\n          from: {\n            opacity: 1\n          },\n          to: {\n            opacity: 0\n          }\n        }\n      },\n      height: function () {\n        return this._$menuList ? this._$menuList.outerHeight() : 0;\n      }.bind(this),\n      width: function () {\n        return this._list.$element().outerWidth();\n      }.bind(this),\n      onContentReady: this._renderMenuContent.bind(this)\n    });\n  },\n  _renderMenuContent: function _renderMenuContent(e) {\n    var $overlayContent = e.component.$content();\n    var items = this._menuItems().slice();\n    if (this._deleteEnabled()) {\n      items.push({\n        text: messageLocalization.format(\"dxListEditDecorator-delete\"),\n        action: this._deleteItem.bind(this)\n      });\n    }\n    this._$menuList = $(\"<div>\");\n    this._list._createComponent(this._$menuList, ListBase, {\n      items: items,\n      onItemClick: this._menuItemClickHandler.bind(this),\n      height: \"auto\",\n      integrationOptions: {}\n    });\n    $overlayContent.addClass(CONTEXTMENU_MENUCONTENT_CLASS);\n    $overlayContent.append(this._$menuList);\n  },\n  _menuItemClickHandler: function _menuItemClickHandler(args) {\n    this._menu.hide();\n    this._fireMenuAction(this._$itemWithMenu, args.itemData.action);\n  },\n  _deleteItem: function _deleteItem() {\n    this._list.deleteItem(this._$itemWithMenu);\n  },\n  handleContextMenu: function handleContextMenu($itemElement) {\n    this._$itemWithMenu = $itemElement;\n    this._menu.option({\n      position: {\n        my: \"top\",\n        at: \"bottom\",\n        of: $itemElement,\n        collision: \"flip\"\n      }\n    });\n    this._menu.show();\n    return true;\n  },\n  dispose: function dispose() {\n    if (this._menu) {\n      this._menu.$element().remove();\n    }\n    this.callBase.apply(this, arguments);\n  }\n}).include(EditDecoratorMenuHelperMixin));","map":null,"metadata":{},"sourceType":"script"}