{"ast":null,"code":"/**\r\n * DevExtreme (ui/calendar/ui.calendar.navigator.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n  extend = require(\"../../core/utils/extend\").extend,\n  Widget = require(\"../widget/ui.widget\"),\n  Button = require(\"../button\");\nvar CALENDAR_NAVIGATOR_CLASS = \"dx-calendar-navigator\",\n  CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS = \"dx-calendar-navigator-previous-month\",\n  CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS = \"dx-calendar-navigator-next-month\",\n  CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS = \"dx-calendar-navigator-previous-view\",\n  CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS = \"dx-calendar-navigator-next-view\",\n  CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS = \"dx-calendar-disabled-navigator-link\",\n  CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS = \"dx-calendar-caption-button\";\nvar Navigator = Widget.inherit({\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      onClick: null,\n      onCaptionClick: null,\n      text: \"\"\n    });\n  },\n  _init: function _init() {\n    this.callBase();\n    this._initActions();\n  },\n  _initActions: function _initActions() {\n    this._clickAction = this._createActionByOption(\"onClick\");\n    this._captionClickAction = this._createActionByOption(\"onCaptionClick\");\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n    this.$element().addClass(CALENDAR_NAVIGATOR_CLASS);\n    this._renderButtons();\n    this._renderCaption();\n  },\n  _renderButtons: function _renderButtons() {\n    var that = this,\n      direction = this.option(\"rtlEnabled\") ? -1 : 1;\n    this._prevButton = this._createComponent($(\"<a>\"), Button, {\n      focusStateEnabled: false,\n      icon: \"chevronleft\",\n      onClick: function onClick(e) {\n        that._clickAction({\n          direction: -direction,\n          event: e\n        });\n      },\n      integrationOptions: {}\n    });\n    var $prevButton = this._prevButton.$element().addClass(CALENDAR_NAVIGATOR_PREVIOUS_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_PREVIOUS_MONTH_CLASS);\n    this._nextButton = this._createComponent($(\"<a>\"), Button, {\n      focusStateEnabled: false,\n      icon: \"chevronright\",\n      onClick: function onClick(e) {\n        that._clickAction({\n          direction: direction,\n          event: e\n        });\n      },\n      integrationOptions: {}\n    });\n    var $nextButton = this._nextButton.$element().addClass(CALENDAR_NAVIGATOR_NEXT_VIEW_CLASS).addClass(CALENDAR_NAVIGATOR_NEXT_MONTH_CLASS);\n    this._caption = this._createComponent($(\"<a>\").addClass(CALENDAR_NAVIGATOR_CAPTION_BUTTON_CLASS), Button, {\n      focusStateEnabled: false,\n      onClick: function onClick(e) {\n        that._captionClickAction({\n          event: e\n        });\n      },\n      integrationOptions: {}\n    });\n    var $caption = this._caption.$element();\n    this.$element().append($prevButton, $caption, $nextButton);\n  },\n  _renderCaption: function _renderCaption() {\n    this._caption.option(\"text\", this.option(\"text\"));\n  },\n  toggleButton: function toggleButton(buttonPrefix, value) {\n    var buttonName = \"_\" + buttonPrefix + \"Button\",\n      button = this[buttonName];\n    if (button) {\n      button.option(\"disabled\", value);\n      button.$element().toggleClass(CALENDAR_NAVIGATOR_DISABLED_LINK_CLASS, value);\n    }\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"text\":\n        this._renderCaption();\n        break;\n      default:\n        this.callBase(args);\n    }\n  }\n});\nmodule.exports = Navigator;","map":null,"metadata":{},"sourceType":"script"}