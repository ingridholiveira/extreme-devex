{"ast":null,"code":"/**\r\n * DevExtreme (localization/core.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _dependency_injector = require(\"../core/utils/dependency_injector\");\nvar _dependency_injector2 = _interopRequireDefault(_dependency_injector);\nvar _parent_locales = require(\"./cldr-data/parent_locales\");\nvar _parent_locales2 = _interopRequireDefault(_parent_locales);\nvar _parentLocale = require(\"./parentLocale\");\nvar _parentLocale2 = _interopRequireDefault(_parentLocale);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar DEFAULT_LOCALE = \"en\";\nmodule.exports = (0, _dependency_injector2.default)({\n  locale: function () {\n    var currentLocale = DEFAULT_LOCALE;\n    return function (locale) {\n      if (!locale) {\n        return currentLocale;\n      }\n      currentLocale = locale;\n    };\n  }(),\n  getValueByClosestLocale: function getValueByClosestLocale(getter) {\n    var locale = this.locale();\n    var value = getter(locale);\n    var isRootLocale = void 0;\n    while (!value && !isRootLocale) {\n      locale = (0, _parentLocale2.default)(_parent_locales2.default, locale);\n      if (locale) {\n        value = getter(locale);\n      } else {\n        isRootLocale = true;\n      }\n    }\n    if (void 0 === value && locale !== DEFAULT_LOCALE) {\n      return getter(DEFAULT_LOCALE);\n    }\n    return value;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}