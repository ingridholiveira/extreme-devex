{"ast":null,"code":"/**\r\n * DevExtreme (ui/validation/validation_mixin.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar VALIDATION_STATUS_VALID = \"valid\",\n  VALIDATION_STATUS_INVALID = \"invalid\",\n  VALIDATION_STATUS_PENDING = \"pending\";\nvar ValidationMixin = {\n  _findGroup: function _findGroup() {\n    var group = this.option(\"validationGroup\"),\n      $dxGroup = void 0;\n    if (!group) {\n      $dxGroup = this.$element().parents(\".dx-validationgroup\").first();\n      if ($dxGroup.length) {\n        group = $dxGroup.dxValidationGroup(\"instance\");\n      } else {\n        group = this._modelByElement(this.$element());\n      }\n    }\n    return group;\n  },\n  _initValidationOptions: function _initValidationOptions(options) {\n    var _this = this;\n    if (options) {\n      var syncOptions = [\"isValid\", \"validationStatus\", \"validationError\", \"validationErrors\"];\n      syncOptions.forEach(function (prop) {\n        if (prop in options) {\n          _this._synchronizeValidationOptions({\n            name: prop,\n            value: options[prop]\n          });\n        }\n      });\n    }\n  },\n  _synchronizeValidationOptions: function _synchronizeValidationOptions(_ref) {\n    var name = _ref.name,\n      value = _ref.value;\n    if (\"validationStatus\" === name) {\n      var isValid = value === VALIDATION_STATUS_VALID || value === VALIDATION_STATUS_PENDING;\n      this.option(\"isValid\") !== isValid && this.option(\"isValid\", isValid);\n      return;\n    }\n    if (\"isValid\" === name) {\n      var validationStatus = this.option(\"validationStatus\");\n      var newStatus = validationStatus;\n      if (value && validationStatus === VALIDATION_STATUS_INVALID) {\n        newStatus = VALIDATION_STATUS_VALID;\n      } else {\n        if (!value && validationStatus !== VALIDATION_STATUS_INVALID) {\n          newStatus = VALIDATION_STATUS_INVALID;\n        }\n      }\n      newStatus !== validationStatus && this.option(\"validationStatus\", newStatus);\n      return;\n    }\n    if (\"validationErrors\" === name) {\n      var validationError = !value || !value.length ? null : value[0];\n      this.option(\"validationError\") !== validationError && this.option(\"validationError\", validationError);\n      return;\n    }\n    if (\"validationError\" === name) {\n      var validationErrors = this.option(\"validationErrors\");\n      if (!value && validationErrors) {\n        this.option(\"validationErrors\", null);\n      } else {\n        if (value && !validationErrors) {\n          this.option(\"validationErrors\", [value]);\n        } else {\n          if (value && validationErrors && value !== validationErrors[0]) {\n            validationErrors[0] = value;\n            this.option(\"validationErrors\", validationErrors.slice());\n          }\n        }\n      }\n    }\n  }\n};\nmodule.exports = ValidationMixin;","map":null,"metadata":{},"sourceType":"script"}