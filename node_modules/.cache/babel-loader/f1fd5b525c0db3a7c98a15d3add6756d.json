{"ast":null,"code":"/**\r\n * DevExtreme (animation/translator.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar dataUtils = require(\"../core/element_data\"),\n  type = require(\"../core/utils/type\").type;\nvar TRANSLATOR_DATA_KEY = \"dxTranslator\",\n  TRANSFORM_MATRIX_REGEX = /matrix(3d)?\\((.+?)\\)/,\n  TRANSLATE_REGEX = /translate(?:3d)?\\((.+?)\\)/;\nvar locate = function locate($element) {\n  var translate = getTranslate($element);\n  return {\n    left: translate.x,\n    top: translate.y\n  };\n};\nvar move = function move($element, position) {\n  var translate,\n    left = position.left,\n    top = position.top;\n  if (void 0 === left) {\n    translate = getTranslate($element);\n    translate.y = top || 0;\n  } else {\n    if (void 0 === top) {\n      translate = getTranslate($element);\n      translate.x = left || 0;\n    } else {\n      translate = {\n        x: left || 0,\n        y: top || 0,\n        z: 0\n      };\n      cacheTranslate($element, translate);\n    }\n  }\n  $element.css({\n    transform: getTranslateCss(translate)\n  });\n  if (isPercentValue(left) || isPercentValue(top)) {\n    clearCache($element);\n  }\n};\nvar isPercentValue = function isPercentValue(value) {\n  return \"string\" === type(value) && \"%\" === value[value.length - 1];\n};\nvar getTranslate = function getTranslate($element) {\n  var result = $element.length ? dataUtils.data($element.get(0), TRANSLATOR_DATA_KEY) : null;\n  if (!result) {\n    var transformValue = $element.css(\"transform\") || getTranslateCss({\n        x: 0,\n        y: 0\n      }),\n      matrix = transformValue.match(TRANSFORM_MATRIX_REGEX),\n      is3D = matrix && matrix[1];\n    if (matrix) {\n      matrix = matrix[2].split(\",\");\n      if (\"3d\" === is3D) {\n        matrix = matrix.slice(12, 15);\n      } else {\n        matrix.push(0);\n        matrix = matrix.slice(4, 7);\n      }\n    } else {\n      matrix = [0, 0, 0];\n    }\n    result = {\n      x: parseFloat(matrix[0]),\n      y: parseFloat(matrix[1]),\n      z: parseFloat(matrix[2])\n    };\n    cacheTranslate($element, result);\n  }\n  return result;\n};\nvar cacheTranslate = function cacheTranslate($element, translate) {\n  if ($element.length) {\n    dataUtils.data($element.get(0), TRANSLATOR_DATA_KEY, translate);\n  }\n};\nvar clearCache = function clearCache($element) {\n  if ($element.length) {\n    dataUtils.removeData($element.get(0), TRANSLATOR_DATA_KEY);\n  }\n};\nvar resetPosition = function resetPosition($element, finishTransition) {\n  var originalTransition,\n    stylesConfig = {\n      left: 0,\n      top: 0,\n      transform: \"none\"\n    };\n  if (finishTransition) {\n    originalTransition = $element.css(\"transition\");\n    stylesConfig.transition = \"none\";\n  }\n  $element.css(stylesConfig);\n  clearCache($element);\n  if (finishTransition) {\n    $element.get(0).offsetHeight;\n    $element.css(\"transition\", originalTransition);\n  }\n};\nvar parseTranslate = function parseTranslate(translateString) {\n  var result = translateString.match(TRANSLATE_REGEX);\n  if (!result || !result[1]) {\n    return;\n  }\n  result = result[1].split(\",\");\n  result = {\n    x: parseFloat(result[0]),\n    y: parseFloat(result[1]),\n    z: parseFloat(result[2])\n  };\n  return result;\n};\nvar getTranslateCss = function getTranslateCss(translate) {\n  translate.x = translate.x || 0;\n  translate.y = translate.y || 0;\n  var xValueString = isPercentValue(translate.x) ? translate.x : translate.x + \"px\";\n  var yValueString = isPercentValue(translate.y) ? translate.y : translate.y + \"px\";\n  return \"translate(\" + xValueString + \", \" + yValueString + \")\";\n};\nexports.move = move;\nexports.locate = locate;\nexports.clearCache = clearCache;\nexports.parseTranslate = parseTranslate;\nexports.getTranslate = getTranslate;\nexports.getTranslateCss = getTranslateCss;\nexports.resetPosition = resetPosition;","map":null,"metadata":{},"sourceType":"script"}