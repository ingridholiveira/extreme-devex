{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel_format_converter.js)\r\n * Version: 19.2.2\r\n * Build date: Tue Oct 01 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar typeUtils = require(\"../core/utils/type\"),\n  stringUtils = require(\"../core/utils/string\"),\n  numberFormatter = require(\"../localization/number\"),\n  dateLocalization = require(\"../localization/date\"),\n  getDateLDMLFormat = require(\"../localization/ldml/date.format\").getFormat,\n  getLanguageID = require(\"../localization/language_codes\").getLanguageId,\n  UNSUPPORTED_FORMAT_MAPPING = {\n    quarter: \"shortDate\",\n    quarterAndYear: \"shortDate\",\n    minute: \"longTime\",\n    millisecond: \"longTime\"\n  },\n  ARABIC_ZERO_CODE = 1632,\n  DEFINED_NUMBER_FORMTATS = {\n    thousands: \"#,##0{0},&quot;K&quot;\",\n    millions: \"#,##0{0},,&quot;M&quot;\",\n    billions: \"#,##0{0},,,&quot;B&quot;\",\n    trillions: \"#,##0{0},,,,&quot;T&quot;\",\n    percent: \"0{0}%\",\n    decimal: \"#{0}\",\n    fixedpoint: \"#,##0{0}\",\n    exponential: \"0{0}E+00\",\n    currency: \" \"\n  };\nvar PERIOD_REGEXP = /a+/g,\n  DAY_REGEXP = /E/g,\n  DO_REGEXP = /dE+/g,\n  STANDALONE_MONTH_REGEXP = /L/g,\n  HOUR_REGEXP = /h/g,\n  SLASH_REGEXP = /\\//g,\n  SQUARE_OPEN_BRACKET_REGEXP = /\\[/g,\n  SQUARE_CLOSE_BRACKET_REGEXP = /]/g,\n  ANY_REGEXP = /./g;\nrequire(\"../localization/currency\");\nvar excelFormatConverter = module.exports = {\n  _applyPrecision: function _applyPrecision(format, precision) {\n    var result, i;\n    if (precision > 0) {\n      result = \"decimal\" !== format ? \".\" : \"\";\n      for (i = 0; i < precision; i++) {\n        result += \"0\";\n      }\n      return result;\n    }\n    return \"\";\n  },\n  _getCurrencyFormat: function _getCurrencyFormat(currency) {\n    return numberFormatter.getOpenXmlCurrencyFormat(currency);\n  },\n  _hasArabicDigits: function _hasArabicDigits(text) {\n    var code;\n    for (var i = 0; i < text.length; i++) {\n      code = text.charCodeAt(i);\n      if (code >= ARABIC_ZERO_CODE && code < ARABIC_ZERO_CODE + 10) {\n        return true;\n      }\n    }\n    return false;\n  },\n  _convertDateFormatToOpenXml: function _convertDateFormatToOpenXml(format) {\n    return format.replace(SLASH_REGEXP, \"\\\\/\").split(\"'\").map(function (datePart, index) {\n      if (index % 2 === 0) {\n        return datePart.replace(PERIOD_REGEXP, \"AM/PM\").replace(DO_REGEXP, \"d\").replace(DAY_REGEXP, \"d\").replace(STANDALONE_MONTH_REGEXP, \"M\").replace(HOUR_REGEXP, \"H\").replace(SQUARE_OPEN_BRACKET_REGEXP, \"\\\\[\").replace(SQUARE_CLOSE_BRACKET_REGEXP, \"\\\\]\");\n      }\n      if (datePart) {\n        return datePart.replace(ANY_REGEXP, \"\\\\$&\");\n      }\n      return \"'\";\n    }).join(\"\");\n  },\n  _convertDateFormat: function _convertDateFormat(format) {\n    format = UNSUPPORTED_FORMAT_MAPPING[format && format.type || format] || format;\n    var that = this,\n      formattedValue = (dateLocalization.format(new Date(2009, 8, 8, 6, 5, 4), format) || \"\").toString(),\n      result = getDateLDMLFormat(function (value) {\n        return dateLocalization.format(value, format);\n      });\n    if (result) {\n      result = that._convertDateFormatToOpenXml(result);\n      result = that._getLanguageInfo(formattedValue) + result;\n    }\n    return result;\n  },\n  _getLanguageInfo: function _getLanguageInfo(defaultPattern) {\n    var languageID = getLanguageID(),\n      languageIDStr = languageID ? languageID.toString(16) : \"\",\n      languageInfo = \"\";\n    if (this._hasArabicDigits(defaultPattern)) {\n      while (languageIDStr.length < 3) {\n        languageIDStr = \"0\" + languageIDStr;\n      }\n      languageInfo = \"[$-2010\" + languageIDStr + \"]\";\n    } else {\n      if (languageIDStr) {\n        languageInfo = \"[$-\" + languageIDStr + \"]\";\n      }\n    }\n    return languageInfo;\n  },\n  _convertNumberFormat: function _convertNumberFormat(format, precision, currency) {\n    var result,\n      excelFormat = \"currency\" === format ? this._getCurrencyFormat(currency) : DEFINED_NUMBER_FORMTATS[format.toLowerCase()];\n    if (excelFormat) {\n      result = stringUtils.format(excelFormat, this._applyPrecision(format, precision));\n    }\n    return result;\n  },\n  convertFormat: function convertFormat(format, precision, type, currency) {\n    if (typeUtils.isDefined(format)) {\n      if (\"date\" === type) {\n        return excelFormatConverter._convertDateFormat(format);\n      } else {\n        if (typeUtils.isString(format) && DEFINED_NUMBER_FORMTATS[format.toLowerCase()]) {\n          return excelFormatConverter._convertNumberFormat(format, precision, currency);\n        }\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}